name: cdk

on:
  push:
    branches:
        - main
  pull_request:

defaults:
  run:
    working-directory: cdk

jobs:
  aws_cdk:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: ${{ format('{0}/{1}', github.workspace, 'cdk/node_modules') }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}/{1}', github.workspace, 'cdk/package.json')) }}

      - name: Setup dependencies
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build

      - name: Cache python libraries
        id: pip_cache_id
        uses: actions/cache@v2
        with:
          path: ${{ format('{0}/{1}', github.workspace, 'layer/python/') }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}/{1}', github.workspace, 'requirements.lock')) }}

      - name: Setup Python dependencies
        if: steps.pip_cache_id.outputs.cache-hit != 'true'
        run: cd .. && mkdir -p layer/python/ && pip install -r requirements.lock -t layer/python/ && cd cdk

      - name: Copy requirements for CDK
        run: mkdir -p ../layer/ && tail -n +10 ../requirements.lock > ../layer/requirements.txt

      - name: CDK Diff Check
        if: contains(github.event_name, 'pull_request')
        run: npm run cdk diff
        env:
          AWS_DEFAULT_REGION: 'ap-northeast-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: CDK Deploy
        if: contains(github.event_name, 'push')
        run: npm run cdk deploy
        env:
          AWS_DEFAULT_REGION: 'ap-northeast-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
